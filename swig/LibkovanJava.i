%module Libkovan
%{
#include "libkovan/include/kovan/kovan.h"
%}
void wait_for_light(int light_port_);
void shut_down_in(double delay);
void beep(void);
int get_motor_position_counter(int motor);
void clear_motor_position_counter(int motor);
int move_at_velocity(int motor, int velocity);
int mav(int motor, int velocity);
int move_to_position(int motor, int speed, int goal_pos);
int mtp(int motor, int speed, int goal_pos);
int move_relative_position(int motor, int speed, int delta_pos);
int mrp(int motor, int speed, int delta_pos);
void set_pid_gains(int motor, short p, short i, short d, short pd, short id, short dd);
void get_pid_gains(int motor, short *p, short *i, short *d, short *pd, short *id, short *dd);
int freeze(int motor);
int get_motor_done(int motor);
void block_motor_done(int motor);
void bmd(int motor);
int setpwm(int motor, int pwm);
int getpwm(int motor);
void fd(int motor);
void bk(int motor);
void motor(int motor, int percent);
void off(int motor);
void alloff();
void ao();
int create_connect();
void create_disconnect();
void create_start();
void create_passive();
void create_safe();
void create_full();
void create_spot();
void create_cover();
void create_demo(int d);
void create_cover_dock();
int get_create_mode();
int get_create_lbump();
int get_create_rbump();
int get_create_lwdrop();
int get_create_cwdrop();
int get_create_rwdrop();
int get_create_wall();
int get_create_lcliff();
int get_create_lfcliff();
int get_create_rfcliff();
int get_create_rcliff();
int get_create_vwall();
int get_create_overcurrents();
int get_create_infrared();
int get_create_advance_button();
int get_create_play_button();
int get_create_normalized_angle();
void set_create_normalized_angle(int angle);
int get_create_total_angle();
void set_create_total_angle(int angle);
int get_create_distance();
void set_create_distance(int dist);
int get_create_battery_charging_state();
int get_create_battery_voltage();
int get_create_battery_current();
int get_create_battery_temp();
int get_create_battery_charge();
int get_create_battery_capacity();
int get_create_wall_amt();
int get_create_lcliff_amt();
int get_create_lfcliff_amt();
int get_create_rfcliff_amt();
int get_create_rcliff_amt();
int get_create_bay_DI();
int get_create_bay_AI();
int get_create_song_number();
int get_create_song_playing();
int get_create_number_of_stream_packets();
int get_create_requested_velocity();
int get_create_requested_radius();
int get_create_requested__right_velocity();
int get_create_requested_left_velocity();
void create_stop();
void create_drive(int speed, int radius);
void create_drive_straight(int speed);
void create_spin_CW(int speed);
void create_spin_CCW(int speed);
void create_drive_direct(int r_speed, int l_speed);
void create_advance_led(int on);
void create_play_led(int on);
void create_power_led(int color, int brightness);
void create_load_song(int num);
void create_play_song(int num);
void set_digital_output(int port, int inout);
void set_digital_value(int port, int value);
void beep();
void display_clear();
int a_button();
int analog(int p);
int analog10(int p);
int b_button();
int side_button();
int digital(int p);
double power_level();
void set_each_analog_state(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7);
void set_analog_pullup(int port, int pullupTF);
void disable_servos();
void enable_servos();
int get_servo_position(int srv);
int set_servo_position(int srv, int pos);
void disable_servo(int port);
void enable_servo(int port);
int get_servo_enabled(int port);
void set_servo_enabled(int port, int enabled);
void msleep(int msec);
double seconds();
void camera_close();
int camera_load_config(char name[]);
int camera_open(int res_numb);
int camera_open_device(int number, int res_numb);
int camera_update();
int get_channel_count();
int get_code_num(int channel, int object);
int get_object_area(int channel, int object);
double get_object_confidence(int channel, int object);
int get_object_count(int channel);
char *get_object_data(int channel, int object);
int get_object_data_length(int channel, int object);
