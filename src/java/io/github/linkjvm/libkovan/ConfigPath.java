/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.linkjvm.libkovan;

public class ConfigPath {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ConfigPath(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConfigPath obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        LinkJVMJNI.delete_ConfigPath(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static SWIGTYPE_p_std__string extension() {
    return new SWIGTYPE_p_std__string(LinkJVMJNI.ConfigPath_extension(), true);
  }

  public static void setBasePath(SWIGTYPE_p_std__string path) {
    LinkJVMJNI.ConfigPath_setBasePath(SWIGTYPE_p_std__string.getCPtr(path));
  }

  public static SWIGTYPE_p_std__string path(SWIGTYPE_p_std__string name) {
    return new SWIGTYPE_p_std__string(LinkJVMJNI.ConfigPath_path__SWIG_0(SWIGTYPE_p_std__string.getCPtr(name)), true);
  }

  public static SWIGTYPE_p_std__string path() {
    return new SWIGTYPE_p_std__string(LinkJVMJNI.ConfigPath_path__SWIG_1(), true);
  }

  public static SWIGTYPE_p_std__string defaultPath() {
    return new SWIGTYPE_p_std__string(LinkJVMJNI.ConfigPath_defaultPath(), true);
  }

  public static SWIGTYPE_p_std__string defaultConfigPath() {
    return new SWIGTYPE_p_std__string(LinkJVMJNI.ConfigPath_defaultConfigPath(), true);
  }

  public static void setDefaultConfigPath(SWIGTYPE_p_std__string name) {
    LinkJVMJNI.ConfigPath_setDefaultConfigPath(SWIGTYPE_p_std__string.getCPtr(name));
  }

  public ConfigPath() {
    this(LinkJVMJNI.new_ConfigPath(), true);
  }

}
